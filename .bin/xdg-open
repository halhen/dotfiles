#!/bin/bash
#
# Alternate xdg-open. Put in $PATH before /usr/bin.

# launches "$file" with first match of arguments and exits if successful
# prefix program with "@" to run in terminal
# example: launch "@vim" "gedit"
launch() {
    while [[ -n "$1" ]]; do
        local app="${1#@*}"
        # Test that $app is executable
        if type -f "$app" &>/dev/null; then
            case "$1" in
                @*) # Text mode
                    if [ -t 1 ]; then # Running in terminal, stay in it
                        "$app" "$file"
                    else              # Need to start terminal
                        nohup xterm -e "\"$app\" \"$file\"" &>/dev/null &
                    fi ;;
                *)
                    nohup "$app" "$file" &>/dev/null & ;;
            esac
            exit $?
        fi
        shift
    done

    return 1
}


file="$1"

# By protocol
case "$file" in
    file://*)
        file=${file#file://*} ;; # Remove protocol and bring file to next step
    http://*|https://*)
        launch "$BROWSER" firefox chromium ;;
esac

# By mime type
case "$(file --mime-type -b "$file" 2>/dev/null)" in
    inode/directory)
        launch "$BROWSER" firefox chromium ;;
    */msword)
        launch libreoffice ;;
    */*opendocument*)
        launch libreoffice ;;
    */pdf)
        launch evince zathura xpdf ;;
    image/svg*)
        launch firefox "$BROWSER" ;;
    image/*)
        launch mirage feh "$BROWSER" ;;
    text/html)
        launch "$BROWSER" firefox chromium ;;
    text/*)
        launch @"$EDITOR" @vim @nano ;;
    video/*)
        launch vlc mplayer ;;
esac

# No luck yet. Hand over to the regular xdg-open.
if [[ -x /usr/bin/xdg-open ]]; then
    nohup /usr/bin/xdg-open "$file" &>/dev/null &
    exit 0
fi

# No regular xdg-open exist, give up.
echo "Don't know how to open $1" >&2
exit 1
